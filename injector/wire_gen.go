// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"Dependency_Injection/controller"
	"Dependency_Injection/repository"
	"Dependency_Injection/service"
	"github.com/google/wire"
)

// Injectors from simpleInjector.go:

func InitializedService(isError bool) (*service.SimpleService, error) {
	simpleRepository := repository.NewRepository(isError)
	simpleService, err := service.NewSimpleService(simpleRepository)
	if err != nil {
		return nil, err
	}
	return simpleService, nil
}

func InitializedDatabaseRepository() *repository.DatabaseRepository {
	databasePostgreSQL := repository.NewPostgreSQL()
	databaseMongo := repository.NewMongo()
	databaseRepository := repository.NewDBRepository(databasePostgreSQL, databaseMongo)
	return databaseRepository
}

func IntializedController() *controller.Controller {
	booksRepository := repository.NewBooksRepository()
	serviceBooksService := service.NewBooksService(booksRepository)
	studentsRepository := repository.NewStudentsRepository()
	serviceStudentsService := service.NewStudentsService(studentsRepository)
	controllerController := controller.NewController(serviceBooksService, serviceStudentsService)
	return controllerController
}

func IntializedControllerStruct() *controller.Controller {
	booksRepository := repository.NewBooksRepository()
	serviceBooksService := service.NewBooksService(booksRepository)
	studentsRepository := repository.NewStudentsRepository()
	serviceStudentsService := service.NewStudentsService(studentsRepository)
	controllerController := &controller.Controller{
		Books:    serviceBooksService,
		Students: serviceStudentsService,
	}
	return controllerController
}

func InitializedControllerInterface() *controller.ControllerBindingInterface {
	serviceService := service.NewServiceImpl()
	controllerBindingInterface := controller.NewControllerBindingInterface(serviceService)
	return controllerBindingInterface
}

// simpleInjector.go:

var booksService = wire.NewSet(repository.NewBooksRepository, service.NewBooksService)

var studentsService = wire.NewSet(repository.NewStudentsRepository, service.NewStudentsService)
